{"version":3,"sources":["images/logo.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","Navbar","bg","Brand","href","alt","src","logo","width","height","Container","Row","Col","icon","faGithub","style","color","size","faFreeCodeCamp","faFacebook","faTwitter","faStackOverflow","backgroundColor","faPencilAlt","faLinkedin","faEnvelope","Date","getFullYear","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ce00f575.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0c71232d.png\";","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport logo from './images/logo.png'\n\nimport {Col, Container, Navbar, Row} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n    faFacebook,\n    faFreeCodeCamp,\n    faGithub,\n    faLinkedin,\n    faStackOverflow,\n    faTwitter\n} from '@fortawesome/free-brands-svg-icons';\nimport {faEnvelope,} from \"@fortawesome/free-regular-svg-icons\";\nimport {faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction getYear() {\n    return new Date().getFullYear();\n}\n\nfunction App() {\n    return (\n        <div className=\"root\">\n            <Navbar bg=\"light\">\n                <Navbar.Brand href=\"http://toufeeqkalam.co.za\">\n                    <img\n                        alt=\"...\"\n                        src={logo}\n                        width=\"35\"\n                        height=\"35\"\n                        className=\"d-inline-block align-top\"\n                    />{' '}\n                    | toufeeqkalam.\n                </Navbar.Brand>\n            </Navbar>\n            <Container>\n                <Row>\n                    <Col>\n                        <img className=\"avatar\" src={\"https://avatars3.githubusercontent.com/u/19366661?v=4\"}\n                             alt=\"...\"/>\n                    </Col>\n                </Row>\n            </Container>\n            <Container>\n                <Row>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <h3>software engineer.</h3>\n                            </Col>\n                        </Row>\n                    </Container>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <hr className=\"divider\"/>\n                                <span className=\"icons\">\n                            <a href=\"https://github.com/toufeeqkalam\">\n                                <FontAwesomeIcon icon={faGithub} style={{color: \"#24292e\"}} size=\"2x\"/>\n                            </a>\n                        </span>\n                                <span className=\"icons\">\n                            <a href=\"https://www.freecodecamp.org/toufeeqkalam\">\n                                <FontAwesomeIcon icon={faFreeCodeCamp} style={{color: \"#006400\"}} size=\"2x\"/>\n                            </a>\n                        </span>\n                                <span className=\"icons\">\n                            <a href=\"https://www.facebook.com/toufeeq.kalam.9\">\n                                <FontAwesomeIcon icon={faFacebook} style={{color: \"#4267B2\"}} size=\"2x\"/>\n                            </a>\n                        </span>\n                                <span className=\"icons\">\n                            <a href=\"https://twitter.com/ToufeeqKalam\">\n                                <FontAwesomeIcon icon={faTwitter} style={{color: \"#1DA1F2\"}} size=\"2x\"/>\n                            </a>\n                        </span>\n                                <span className=\"icons\">\n                            <a href=\"https://stackoverflow.com/users/9337697/toufeeq-kalam\">\n                                <FontAwesomeIcon icon={faStackOverflow} style={{color: \"#F48024\"}} size=\"2x\"/>\n                            </a>\n                        </span>\n                                <hr className=\"divider\"/>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Row>\n            </Container>\n            <Container>\n                <Row>\n                    <Col>\n                        <p className=\"info-text\"><span>&#42;</span> To view the projects I have worked on and currently\n                            working on, check <a\n                                href=\"https://github.com/toufeeqkalam\"><kbd\n                                style={{backgroundColor: \"#24292e\"}}><FontAwesomeIcon icon={faGithub}/>{\" \"}GitHub</kbd></a>\n                        </p>\n                    </Col>\n                </Row>\n            </Container>\n            <Container>\n                <Row>\n                    <Col>\n                        <p className=\"info-text\"><span>&#42;</span> Follow me on my greatest learnings in the world of\n                            tech, see <a\n                                href=\"http://www.toufeeqkalam.co.za/blog/\"><kbd\n                                style={{backgroundColor: \"#6495ED\"}}><FontAwesomeIcon\n                                icon={faPencilAlt}/>{\" \"}Blog</kbd></a></p>\n                    </Col>\n                </Row>\n            </Container>\n            <Container>\n                <Row>\n                    <Col>\n                        <p className=\"info-text\"><span>&#42;</span> Take a look at my awesome professional career,\n                            see <a\n                                href=\"https://www.linkedin.com/in/toufeeq-kalam-238975a3/\"><kbd\n                                style={{backgroundColor: \"#0e76a8\"}}><FontAwesomeIcon\n                                icon={faLinkedin}/>{\" \"}LinkedIn</kbd></a>\n                        </p>\n                    </Col>\n                </Row>\n            </Container>\n            <Container>\n                <Row>\n                    <Col>\n                        <p className=\"info-text\"><span>&#42;</span> Get in touch, feel free to <a\n                            href=\"http://toufeeqkalam.co.za/blog/contact-me/\"><kbd style={{backgroundColor: \"#20B2AA\"}}><FontAwesomeIcon\n                            icon={faEnvelope}/>{\" \"}email me</kbd></a>\n                        </p>\n                        <hr className=\"divider\"/>\n                    </Col>\n                </Row>\n            </Container>\n            <Container>\n                <Row>\n                    <p className=\"info-text\"><a href=\"https://github.com/toufeeqkalam\"><kbd\n                        style={{backgroundColor: \"#d73a49\"}}><FontAwesomeIcon icon={faGithub}/>{\" \"}Fork me on\n                        GitHub</kbd></a>\n                    </p>\n                </Row>\n            </Container>\n            <Container>\n                <Row>\n                    <footer className=\"footer\">\n                        &copy; Copyright {getYear()} {\"\"}\n                        <a href=\"http://toufeeqkalam.co.za\">Toufeeq Kalam</a>\n                    </footer>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}